/*
判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。

数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

示例 1:
输入:
[
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
输出: true

示例 2:
输入:
[
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
输出: false

说明:
一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
给定数独序列只包含数字 1-9 和字符 '.' 。
给定数独永远是 9x9 形式的。

链接：https://leetcode-cn.com/problems/valid-sudoku
*/

#include <iostream>
#include <vector>
using namespace std;

/*
哈希表 一次遍历
*/
bool isValidSudoku(vector<vector<char>>& board) {
      // 1. 哈希表
      int row[9][10] = {0}; // 存储每一行的每个数是否出现过
      int col[9][10] = {0}; // 存储每一列的每个数是否出现过
      int box[9][10] = {0}; //存储每一个box的每个数是否出现过

      // 2. 遍历数字
      for(int i = 0;i < 9;i++){
        for(int j = 0;j < 9;j++){
            if(board[i][j] == '.') continue; // .,不处理
            int cur = board[i][j] - '0';  // 字符转换为数字
            if(row[i][cur]) return false; //在同一行出现重复数字
            if(col[j][cur]) return false; //在同一列出现重复数字
            if(box[j/3 + (i/3)*3][cur]) return false; // 在同一个九宫格出现重复数字

            // 没出现过的数字做标记
            row[i][cur] = 1;
            col[j][cur] = 1;
            box[j/3 + (i/3)*3][cur] = 1;
        }
      }
      return true;
}